# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json

name: Deploy

on: [release, workflow_dispatch]

jobs:
    deploy:
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        name: Deploy
        runs-on: ubuntu-latest
        environment: deploy_env

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install pipx
              run: |
                  sudo apt update
                  sudo apt install pipx
                  pipx ensurepath
                  sudo pipx ensurepath --global

            - name: Install ansible
              run: pipx install --include-deps ansible

            - name: Install aws
              run: pipx install awscli

            - name: Create ssh key file
              run: |
                  touch ~/.ansible_key
                  echo "${{ secrets.SSH_KEY }}" >> ~/.ansible_key
                  chmod 400 ~/.ansible_key

            - name: Get instance public ip
              id: get-instance-ip
              env:
                  AWS_REGION: ${{ secrets.AWS_REGION }}
                  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  INSTANCE_NAME: next-saas
              run: |
                  PUBLIC_IP=$(make get-instance-ip)
                  echo "HOST_IP=$PUBLIC_IP" >> "$GITHUB_OUTPUT"

            - name: Deploy
              env:
                  AWS_REGION: ${{ secrets.AWS_REGION }}
                  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  CONTAINER_IMAGE_NAME: ${{ secrets.CONTAINER_IMAGE_NAME }}
                  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
                  HOST: ${{ secrets.HOST }}
                  HOST_IP: ${{ steps.get-instance-ip.outputs.HOST_IP }}
              run: make deploy
