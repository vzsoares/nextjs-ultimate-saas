- name: Ping test
  hosts: '{{ HOST }}'
  tasks:
      - name: Ping my hosts
        ansible.builtin.ping:

- name: Update instance image
  hosts: '{{ HOST }}'
  become: true

  vars:
      AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
      AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
      AWS_REGION: "{{ lookup('env', 'AWS_REGION') }}"
      AWS_ACCOUNT_ID: "{{ lookup('env', 'AWS_ACCOUNT_ID') }}"
      REGISTRY_URL: '{{ AWS_ACCOUNT_ID }}.dkr.ecr.{{ AWS_REGION }}.amazonaws.com'

  tasks:
      - name: Ensure docker
        ansible.builtin.include_tasks:
            file: ensure_docker_tasks.ansible.yaml

      - name: Ensure aws cli
        ansible.builtin.include_tasks:
            file: ensure_aws_cli_tasks.ansible.yaml

      - name: Get AWS ECR password
        environment:
            AWS_ACCESS_KEY_ID: '{{ AWS_ACCESS_KEY_ID }}'
            AWS_SECRET_ACCESS_KEY: '{{ AWS_SECRET_ACCESS_KEY }}'
        ansible.builtin.shell: aws ecr get-login-password --region "{{ AWS_REGION }}"
        register: ECR_PASS

      - name: Log into private registry and force re-authorization
        community.docker.docker_login:
            registry_url: '{{ REGISTRY_URL }}'
            username: AWS
            password: '{{ ECR_PASS.stdout }}'
            reauthorize: true

      - name: Pull image
        community.docker.docker_image_pull:
            name: '{{ REGISTRY_URL }}/next-saas/single'

      - name: Re-create container
        community.docker.docker_container:
            name: next-saas-single
            image: '{{ REGISTRY_URL }}/next-saas/single'
            state: present
            # restart: true
            detach: true
            restart_policy: always
            recreate: true
            # container_default_behavior: compatibility
            # network_mode: default
            # networks_cli_compatible: false
            # networks:
            #     - name: bridge
            expose:
                - 3000
            # publish_all_ports: true
            ports:
                - '32769:3000'
